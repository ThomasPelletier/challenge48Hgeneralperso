---
- name: Configure host
  hosts: docker
  tasks:
    - name: "[Requirements] Apt remove" 
      become: true
      ansible.builtin.apt:
        autoremove: true
        name:
          - apache2
        state: absent

    - name: "[Requirements] Apt install"
      become: true
      ansible.builtin.apt:
        name:
          - software-properties-common
          - openjdk-8-jre-headless
          - mysql-client
        state: present
        update_cache: yes
        install_recommends: yes

    - name : "[Node] Check node"
      shell: |
        node -v
      args:
        executable: /bin/bash
      register: node_installed
      failed_when: node_installed.rc == -1
      changed_when: node_installed.rc == -1

    - name:  "[Node] Download and install NVM"
      shell: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
      when: node_installed.rc != 0

    - name: "[Node] Make the nvm bash script executable"
      shell: |
        chmod +x ~/.nvm/nvm.sh
      when: node_installed.rc != 0

    - name: "[Node] Install Node Versions"
      shell: |
        source ~/.nvm/nvm.sh && nvm install 16.16.0
      args:
        executable: /bin/bash
      when: node_installed.rc != 0

    - name: "[Docker] Add Docker GPG apt Key"
      become: true
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: "[Docker] Add Docker Repository"
      become: true
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: "[Docker] Update apt and install docker-ce"
      become: true
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: "[Docker] Add the user to the Docker group"
      become: true
      ansible.builtin.user:
        name: adminuser
        group: docker

    - name: "[Install] Crate Mysql directory"
      become: true
      ansible.builtin.file:
        path: /mysql
        state: directory
        mode: '0755'
        owner: adminuser

    - name: "[Install] Clean the local directory"
      become: true
      ansible.builtin.file:
        path: /home/adminuser/repo
        state: absent
      tags:
        - temp

    - name: "[Install] Clone the repository"
      git:
        repo: https://github.com/ThomasPelletier/challenge48Hgeneralperso.git
        dest: ~/repo
        clone: yes
      tags:
        - temp

    - name: "[Install] Create infra env file"
      ansible.builtin.copy:
        src: ../.ovhapi
        dest: ~/repo/infra/docker/.ovhapi
        owner: adminuser
        mode: '0600'
      tags:
        - temp

    - name: "[Install] Create front env file"
      ansible.builtin.copy:
        src: ./src/.envfront
        dest: ~/repo/front/.env
        owner: adminuser
        mode: '0600'
      tags:
        - temp

    - name: "[Install] Create back env file"
      ansible.builtin.copy:
        src: ./src/.envback
        dest: ~/repo/back/.env
        owner: adminuser
        mode: '0600'
      tags:
        - temp

    - name: "[Config] Set variables"
      shell: |
        IP=$(cat /home/adminuser/URL) && sed -i -e 's/VUE_APP_IP_API=.*/VUE_APP_IP_API='$IP'/g' ~/repo/front/.env
        IP=$(cat /home/adminuser/URL) && sed -i -e 's/ip=.*/ip='$IP'/g' ~/repo/back/.env
      args:
        chdir: ~/repo/infra/docker
      register: certbot
      failed_when: certbot.rc == -1
      tags:
        - temp

    # - name: "[Run] Run certbot script"
    #   shell: |
    #     /bin/bash chmod +x ./certbot.sh && ./certbot.sh
    #   args:
    #     chdir: ~/repo/infra/docker
    #   register: certbot
    #   failed_when: certbot.rc == -1
    #   tags:
    #     - temp

    - name: "[Run] Start containers"
      shell: |
        /bin/bash docker compose build --no-cache ; docker compose down ; docker compose up -d
      args:
        chdir: ~/repo/infra/docker
      tags:
        - temp

    - name: "[MySQL] MySQL setup script"
      shell: |
        sleep 120 && mysql -u admin -h 127.0.0.1 -piamthepassword < ./setupInstance.sql
        mysql -u admin -h 127.0.0.1 -piamthepassword -D 48hoursYnov < ./insertInstance.sql
      args:
        chdir: ~/repo/mysql
      tags:
        - temp
        - db
